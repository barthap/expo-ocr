{"version":3,"file":"ExpoOcr.js","sourceRoot":"","sources":["../src/ExpoOcr.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,YAAY,EAAgB,MAAM,mBAAmB,CAAC;AAEnF,0EAA0E;AAC1E,wCAAwC;AACxC,OAAO,OAAO,MAAM,iBAAiB,CAAC;AACtC,OAAO,WAAW,MAAM,eAAe,CAAC;AAGxC,iCAAiC;AACjC,MAAM,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;AAE7B,MAAM,UAAU,KAAK;IACnB,OAAO,OAAO,CAAC,KAAK,EAAE,CAAC;AACzB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,KAAa;IAC/C,OAAO,MAAM,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC5C,CAAC;AAED,6FAA6F;AAC7F,6EAA6E;AAC7E,iHAAiH;AACjH,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,kBAAkB,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC;AAExE,MAAM,UAAU,iBAAiB,CAAC,QAA6C;IAC7E,OAAO,OAAO,CAAC,WAAW,CAAqB,UAAU,EAAE,QAAQ,CAAC,CAAC;AACvE,CAAC;AAED,OAAO,EAAE,WAAW,EAAwC,CAAC","sourcesContent":["import { NativeModulesProxy, EventEmitter, Subscription } from 'expo-modules-core';\n\n// Import the native module. On web, it will be resolved to ExpoOcr.web.ts\n// and on native platforms to ExpoOcr.ts\nimport ExpoOcr from './ExpoOcrModule';\nimport ExpoOcrView from './ExpoOcrView';\nimport { ChangeEventPayload, ExpoOcrViewProps } from './ExpoOcr.types';\n\n// Get the native constant value.\nexport const PI = ExpoOcr.PI;\n\nexport function hello(): string {\n  return ExpoOcr.hello();\n}\n\nexport async function setValueAsync(value: string) {\n  return await ExpoOcr.setValueAsync(value);\n}\n\n// For now the events are not going through the JSI, so we have to use its bridge equivalent.\n// This will be fixed in the stable release and built into the module object.\n// Note: On web, NativeModulesProxy.ExpoOcr is undefined, so we fall back to the directly imported implementation\nconst emitter = new EventEmitter(NativeModulesProxy.ExpoOcr ?? ExpoOcr);\n\nexport function addChangeListener(listener: (event: ChangeEventPayload) => void): Subscription {\n  return emitter.addListener<ChangeEventPayload>('onChange', listener);\n}\n\nexport { ExpoOcrView, ExpoOcrViewProps, ChangeEventPayload };\n"]}